diff --git a/superblame.py b/superblame.py
index 7117f47..8785d8c 100644
--- a/superblame.py
+++ b/superblame.py
@@ -11,6 +11,21 @@ import argparse
 import os
 
 
+class Mod:
+
+  def __init__(self):
+    self.paths = []
+    self.adds = []
+    self.removes = []
+    self.blames = []
+    self.line = 1
+
+  def __str__(self):
+    return "{{{}\n  {}\n  {}\n  {}\n  {}\n}}".format(self.paths, self.adds,\
+        self.removes, self.blames, self.line)
+
+
+
 # Mapping of firs split to handler, populated at the end of file.
 handler = {}
 
@@ -18,49 +33,79 @@ handler = {}
 def main():
   args = parse_args()
   with open(args.patch) as patch_file:
-    a = {'paths': [], 'adds': [], 'deletes': [], 'blames': []}
-    b = {'paths': [], 'adds': [], 'deletes': [], 'blames': []}
+    a = Mod()
+    b = Mod()
     for line in patch_file:
-      splits = line.split()
-      if len(splits) and splits[0] in handlers:
-        handlers[splits[0]](splits, a, b)
+      if len(line) and line[0] in handlers:
+        handlers[line[0]](line, a, b)
     print a
     print
     print b
-  
 
-def handle_header(splits, a, b):
+
+def handle_mod(line, a, b):
+  if line[0] == '+':
+    b.line += 1
+  elif line[0] == '-':
+    a.line += 1
+  else:
+    assert False
+
+
+def handle_unmod(line, a, b):
+  a.line += 1
+  b.line += 1
+  
+ 
+def handle_header(line, a, b):
+  splits = line.split()
   path = splits[1]
   if len(path) > 1 and (path[0:2] == 'a/' or path[0:2] == 'b/'):
     path = path[2:]
-  if splits[0] == '---': x = a
-  elif splits[0] == '+++': x = b
-  else: assert False
-  x['paths'].append(path)
+  if splits[0] == '---':
+    x = a
+  elif splits[0] == '+++':
+    x = b
+  else:
+    assert False
+  x.paths.append(path)
 
 
+def handle_header_or_mod(line, a, b):
+  if line[0] == line[1] and line[1] == line[2]:
+    return handle_header(line, a, b)
+  return handle_mod(line, a, b);
 
-def handle_hunk(splits, a, b):
+
+def handle_hunk(line, a, b):
   pass
 
 
-def handle_diff(splits, a, b):
+def handle_index(line, a, b):
+  splits = line.split()
+  assert splits[0] == 'index'
+
+
+def handle_diff(line, a, b):
+  splits = line.split()
   assert splits[0] == 'diff'
   assert splits[1] == '--git'
   assert splits[2][0] == 'a'
   assert splits[3][0] == 'b'
 
 
-def handle_comment(splits, a, b):
+def handle_comment(line, a, b):
   pass
 
 
 handlers = {
   '#': handle_comment,
-  'diff': handle_diff,
-  '@@': handle_hunk,
-  '---': handle_header,
-  '+++': handle_header,
+  'd': handle_diff,
+  'i': handle_index,
+  '@': handle_hunk,
+  '-': handle_header_or_mod,
+  '+': handle_header_or_mod,
+  ' ': handle_unmod,
 }
 
 def parse_args():
